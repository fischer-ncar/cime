<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config_machines SYSTEM "file:/Users/Andi/Development/ESMCI/cime/cime_config/acme/machines/config_machines.dtd">

<config_machines>
    <machine MACH="MACHINE NAME">
        <DESC>DESCRIPTION OF THE MACHINE</DESC>                             <!-- can be anything -->
        <NODENAME_REGEX>MACHINE</NODENAME_REGEX>                            <!-- regex for auto-detect that you're on this machine -->
        <TESTS>acme_developer</TESTS>                                       <!-- preferred test suite to run on this machine -->
        <OS>USERDEFINED_required_macros</OS>                                <!-- LINUX,Darwin,CNL,AIX,BGL,BGP -->
        <COMPILERS>intel,ibm,pgi,pathscale,gnu,cray,nag</COMPILERS>         <!-- intel,ibm,pgi,pathscale,gnu,cray,nag -->
        <MPILIBS>openmpi,mpich,mpt,mpt,ibm,mpi-serial</MPILIBS>                <!-- openmpi, mpich, ibm, mpi-serial -->
        <CESMSCRATCHROOT>USERDEFINED_required_build</CESMSCRATCHROOT>                     <!-- complete path to the 'scratch' directory -->
        <RUNDIR>USERDEFINED_required_build</RUNDIR>                       <!-- complete path to the run directory -->
        <EXEROOT>USERDEFINED_required_build</EXEROOT>                     <!-- complete path to the build directory -->
        <DIN_LOC_ROOT>USERDEFINED_required_build</DIN_LOC_ROOT>           <!-- complete path to the inputdata directory -->
        <DIN_LOC_ROOT_CLMFORC>USERDEFINED_optional_build</DIN_LOC_ROOT_CLMFORC> <!-- path to the optional forcing data for CLM (for CRUNCEP forcing) -->
        <DOUT_S>FALSE</DOUT_S>                                            <!-- logical for short term archiving -->
        <DOUT_S_ROOT>USERDEFINED_optional_run</DOUT_S_ROOT>               <!-- complete path to a short term archiving directory -->
        <DOUT_L_MSROOT>USERDEFINED_optional_run</DOUT_L_MSROOT>           <!-- complete path to a long term archiving directory -->
        <CCSM_BASELINE>USERDEFINED_optional_run</CCSM_BASELINE>           <!-- where the cesm testing scripts write and read baseline results -->
        <CCSM_CPRNC>USERDEFINED_optional_test</CCSM_CPRNC>                <!-- path to the cprnc tool used to compare netcdf history files in testing -->
        <BATCHQUERY>USERDEFINED_optional_run</BATCHQUERY>
        <BATCHSUBMIT>USERDEFINED_optional_run</BATCHSUBMIT>
        <BATCHREDIRECT></BATCHREDIRECT>
        <SUPPORTED_BY>USERDEFINED_optional</SUPPORTED_BY>
        <GMAKE_J>1</GMAKE_J>
        <MAX_TASKS_PER_NODE>USERDEFINED_required_build</MAX_TASKS_PER_NODE>
        
        <batch_system type="slurm" version="x.y">
            <queues>
                <queue walltimemax="36:00:00" jobmin="1" jobmax="130181" >regular</queue>
                <queue walltimemax="00:30:00" jobmin="1" jobmax="12288" default="true">debug</queue>
            </queues>
            <walltimes>
                <walltime default="true">00:30:00</walltime>
            </walltimes>
        </batch_system>
        
        <mpirun mpilib="default">
            <executable args="">mpirun</executable>
            <arguments>
                <arg name="" default=""></arg>      
            </arguments>
        </mpirun>
        
        <!-- Module system of machine, dependencies for compiler and mpilib combinations -->
        <module_system type="module">
            <init_path lang="perl">/opt/modules/default/init/perl.pm</init_path>
            <init_path lang="python">/opt/modules/default/init/python.py</init_path>
            <init_path lang="sh">/opt/modules/default/init/sh</init_path>
            
            <cmd_path lang="perl">/opt/modules/default/bin/modulecmd perl</cmd_path>
            <cmd_path lang="python">/opt/modules/default/bin/modulecmd python</cmd_path>
            <cmd_path lang="sh">module</cmd_path>
            
            <!-- Check every module if condition applies  -->
            
            <!-- Always execute -->
            <modules>
                <command name="rm">intel</command>
                <command name="rm">pmi</command>
            </modules>
            
            <!-- If compiler is  $C -->
            <modules compiler="intel">
                <command name="load">PrgEnv-intel</command>
                <command name="switch">intel intel/16.0.0.109</command>
                <command name="rm">cray-libsci</command>
                <command name="use">/global/project/projectdirs/ccsm1/modulefiles/edison</command>
            </modules>
            
            <!-- If compiler is $C and mpilib $M -->
            <modules compiler="intel" mpilib="mpi-serial" >
                <command name="load">esmf/6.3.0rp1-defio-intel15.0-mpiuni-O</command>
            </modules>
            
            <!-- If compiler is $C and not mpilib $M -->
            <modules compiler="intel" mpilib="!mpi-serial" >
                <command name="load">esmf/6.3.0rp1-defio-intel15.0-mpi-O</command>
            </modules>
           
           <!-- If mpilib is $M -->
            <modules mpilib="mpi-serial">
                <command name="load">cray-hdf5/1.8.16</command>
                <command name="load">cray-netcdf/4.3.3.1</command>
            </modules>
            
        </module_system>
        
        <!-- Set environment variables depending on compiler and mpilib -->
        
        <!-- Always set -->
        <environment_variables>
            <env name="OMP_STACKSIZE">64M</env>
        </environment_variables>
        
        <!-- Set if compiler and mpilib  -->
        <environment_variables compiler="" mpilib="">
            <env name=""></env>
        </environment_variables>
        
    </machine>

</config_machines>
